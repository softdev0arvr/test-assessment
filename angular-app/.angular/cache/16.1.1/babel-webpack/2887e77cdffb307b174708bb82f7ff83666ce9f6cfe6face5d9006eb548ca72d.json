{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let TimerComponent = class TimerComponent {\n  constructor(toastr, timerService) {\n    this.toastr = toastr;\n    this.timerService = timerService;\n    this.countdown = 0;\n    this.countdown1 = 0;\n    this.minutes = 0;\n    this.seconds = 0;\n    this.minutes1 = 0;\n    this.seconds1 = 0;\n    this.isTimerRunning = false;\n    this.isTimerRunning1 = false;\n    this.data = {};\n  }\n  ngOnInit() {\n    this.loadTimerConfiguration();\n  }\n  loadTimerConfiguration() {\n    this.timerService.getTime().subscribe(response => {\n      console.log(\"Response\", response);\n      this.timerConfig = response;\n      this.isTimerRunning1 = true;\n      this.countdown1 = response;\n      // this.updateCountdown1();\n    }, error => {\n      this.toastr.error('Failed to load timer configuration.');\n      console.error(error);\n    });\n  }\n  startTimer() {\n    this.http.get('https://localhost:7285/api/Timer/Configure').subscribe(response => {\n      this.timerConfig = response;\n      this.isTimerRunning = true;\n      this.countdown = response;\n      this.toastr.success('Timer started.');\n      this.updateCountdown();\n    }, error => {\n      this.toastr.error('Failed to start timer.');\n      console.error(error);\n    });\n  }\n  stopTimer() {\n    this.http.post('https://localhost:7285/api/Timer/Stop', {}).subscribe(() => {\n      this.isTimerRunning = false;\n      this.toastr.success('Timer stopped.');\n    }, error => {\n      this.toastr.error('Failed to stop timer.');\n      console.error(error);\n    });\n  }\n  updateCountdown() {\n    if (this.isTimerRunning && this.countdown > 0) {\n      setTimeout(() => {\n        this.countdown--;\n        console.log(this.countdown);\n        if (this.countdown > 60) {\n          this.minutes = Math.floor(this.countdown / 60);\n          this.seconds = this.countdown - this.minutes * 60;\n        } else {\n          this.minutes = 0;\n          this.seconds = this.countdown;\n        }\n        this.updateCountdown();\n      }, 1000);\n    } else {\n      this.toastr.success('Countdown completed.');\n      //Tell BE that timer has stopped\n      this.http.post('https://localhost:7285/api/Timer/Stop', {}).subscribe(() => {\n        this.isTimerRunning = false;\n        this.countdown = 0;\n      }, error => {\n        this.toastr.error('Failed to stop timer.');\n        console.error(error);\n      });\n    }\n  }\n};\nTimerComponent = __decorate([Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.css']\n})], TimerComponent);","map":{"version":3,"names":["Component","TimerComponent","constructor","toastr","timerService","countdown","countdown1","minutes","seconds","minutes1","seconds1","isTimerRunning","isTimerRunning1","data","ngOnInit","loadTimerConfiguration","getTime","subscribe","response","console","log","timerConfig","error","startTimer","http","get","success","updateCountdown","stopTimer","post","setTimeout","Math","floor","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Projects\\timer-app\\src\\app\\timer\\timer.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\nimport { TimerService } from '../services/timer.service';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.css']\n})\n\nexport class TimerComponent {\n  \n  timerConfig: any;\n  countdown: number = 0;\n  countdown1: number = 0;\n  minutes: number = 0;\n  seconds: number = 0;\n  minutes1: number = 0;\n  seconds1: number = 0;\n  isTimerRunning: boolean = false;\n  isTimerRunning1: boolean = false;\n  data: any = {};\n  constructor(private toastr: ToastrService, private timerService: TimerService) { }\n\n  ngOnInit() {\n    this.loadTimerConfiguration();\n  }\n\n  loadTimerConfiguration() {\n    this.timerService.getTime()\n      .subscribe(\n        (response) => {\n          console.log(\"Response\",response);\n          this.timerConfig = response;\n          this.isTimerRunning1 = true;\n          this.countdown1 = response;\n          \n          // this.updateCountdown1();\n        },\n        (error) => {\n          this.toastr.error('Failed to load timer configuration.');\n          console.error(error);\n        }\n      );\n  }\n\n  startTimer() {\n    this.http.get<number>('https://localhost:7285/api/Timer/Configure')\n      .subscribe(\n        (response) => {\n          this.timerConfig = response;\n          this.isTimerRunning = true;\n          this.countdown = response;\n          this.toastr.success('Timer started.');\n          \n          this.updateCountdown();\n        },\n        (error) => {\n          this.toastr.error('Failed to start timer.');\n          console.error(error);\n        }\n      );\n  }\n\n  stopTimer() {\n    this.http.post('https://localhost:7285/api/Timer/Stop', {})\n      .subscribe(\n        () => {\n          this.isTimerRunning = false;\n          this.toastr.success('Timer stopped.');\n        },\n        (error) => {\n          this.toastr.error('Failed to stop timer.');\n          console.error(error);\n        }\n      );\n  }\n\n  updateCountdown() {\n    if (this.isTimerRunning && this.countdown > 0) {\n      setTimeout(() => {\n        this.countdown--;\n        console.log(this.countdown);\n        if(this.countdown>60){\n          this.minutes = Math.floor(this.countdown/60);\n          this.seconds = this.countdown - this.minutes*60;\n        }else{\n          this.minutes = 0;\n          this.seconds = this.countdown;\n        }\n        this.updateCountdown();\n      }, 1000);\n    } else {\n      this.toastr.success('Countdown completed.');\n      //Tell BE that timer has stopped\n      this.http.post('https://localhost:7285/api/Timer/Stop', {})\n      .subscribe(\n        () => {\n          this.isTimerRunning = false;\n          this.countdown = 0;\n        },\n        (error) => {\n          this.toastr.error('Failed to stop timer.');\n          console.error(error);\n        }\n      );\n    }\n  }\n\n  // updateCountdown1() {\n  //   if (this.isTimerRunning1 && this.countdown1 > 0) {\n  //     setTimeout(() => {\n  //       this.countdown1--;\n  //       console.log(this.countdown1);\n  //       if(this.countdown1>60){\n  //         this.minutes1 = Math.floor(this.countdown1/60);\n  //         this.seconds1 = this.countdown1 - this.minutes1*60;\n  //       }else{\n  //         this.minutes1 = 0;\n  //         this.seconds1 = this.countdown1;\n  //       }\n  //       this.updateCountdown1();\n  //     }, 1000);\n  //   } else {\n  //     this.toastr.success('Countdown completed.');\n  //     //Tell BE that timer has stopped\n  //     this.http.post('https://localhost:7285/api/Timer/Stop', {})\n  //     .subscribe(\n  //       () => {\n  //         this.isTimerRunning1 = false;\n  //         this.countdown1 = 0;\n  //       },\n  //       (error) => {\n  //         this.toastr.error('Failed to stop timer.');\n  //         console.error(error);\n  //       }\n  //     );\n  //   }\n  // }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAYzBC,YAAoBC,MAAqB,EAAUC,YAA0B;IAAzD,KAAAD,MAAM,GAANA,MAAM;IAAyB,KAAAC,YAAY,GAAZA,YAAY;IAT/D,KAAAC,SAAS,GAAW,CAAC;IACrB,KAAAC,UAAU,GAAW,CAAC;IACtB,KAAAC,OAAO,GAAW,CAAC;IACnB,KAAAC,OAAO,GAAW,CAAC;IACnB,KAAAC,QAAQ,GAAW,CAAC;IACpB,KAAAC,QAAQ,GAAW,CAAC;IACpB,KAAAC,cAAc,GAAY,KAAK;IAC/B,KAAAC,eAAe,GAAY,KAAK;IAChC,KAAAC,IAAI,GAAQ,EAAE;EACmE;EAEjFC,QAAQA,CAAA;IACN,IAAI,CAACC,sBAAsB,EAAE;EAC/B;EAEAA,sBAAsBA,CAAA;IACpB,IAAI,CAACX,YAAY,CAACY,OAAO,EAAE,CACxBC,SAAS,CACPC,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAAC,UAAU,EAACF,QAAQ,CAAC;MAChC,IAAI,CAACG,WAAW,GAAGH,QAAQ;MAC3B,IAAI,CAACN,eAAe,GAAG,IAAI;MAC3B,IAAI,CAACN,UAAU,GAAGY,QAAQ;MAE1B;IACF,CAAC,EACAI,KAAK,IAAI;MACR,IAAI,CAACnB,MAAM,CAACmB,KAAK,CAAC,qCAAqC,CAAC;MACxDH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACL;EAEAC,UAAUA,CAAA;IACR,IAAI,CAACC,IAAI,CAACC,GAAG,CAAS,4CAA4C,CAAC,CAChER,SAAS,CACPC,QAAQ,IAAI;MACX,IAAI,CAACG,WAAW,GAAGH,QAAQ;MAC3B,IAAI,CAACP,cAAc,GAAG,IAAI;MAC1B,IAAI,CAACN,SAAS,GAAGa,QAAQ;MACzB,IAAI,CAACf,MAAM,CAACuB,OAAO,CAAC,gBAAgB,CAAC;MAErC,IAAI,CAACC,eAAe,EAAE;IACxB,CAAC,EACAL,KAAK,IAAI;MACR,IAAI,CAACnB,MAAM,CAACmB,KAAK,CAAC,wBAAwB,CAAC;MAC3CH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACL;EAEAM,SAASA,CAAA;IACP,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,uCAAuC,EAAE,EAAE,CAAC,CACxDZ,SAAS,CACR,MAAK;MACH,IAAI,CAACN,cAAc,GAAG,KAAK;MAC3B,IAAI,CAACR,MAAM,CAACuB,OAAO,CAAC,gBAAgB,CAAC;IACvC,CAAC,EACAJ,KAAK,IAAI;MACR,IAAI,CAACnB,MAAM,CAACmB,KAAK,CAAC,uBAAuB,CAAC;MAC1CH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACL;EAEAK,eAAeA,CAAA;IACb,IAAI,IAAI,CAAChB,cAAc,IAAI,IAAI,CAACN,SAAS,GAAG,CAAC,EAAE;MAC7CyB,UAAU,CAAC,MAAK;QACd,IAAI,CAACzB,SAAS,EAAE;QAChBc,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,SAAS,CAAC;QAC3B,IAAG,IAAI,CAACA,SAAS,GAAC,EAAE,EAAC;UACnB,IAAI,CAACE,OAAO,GAAGwB,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC3B,SAAS,GAAC,EAAE,CAAC;UAC5C,IAAI,CAACG,OAAO,GAAG,IAAI,CAACH,SAAS,GAAG,IAAI,CAACE,OAAO,GAAC,EAAE;SAChD,MAAI;UACH,IAAI,CAACA,OAAO,GAAG,CAAC;UAChB,IAAI,CAACC,OAAO,GAAG,IAAI,CAACH,SAAS;;QAE/B,IAAI,CAACsB,eAAe,EAAE;MACxB,CAAC,EAAE,IAAI,CAAC;KACT,MAAM;MACL,IAAI,CAACxB,MAAM,CAACuB,OAAO,CAAC,sBAAsB,CAAC;MAC3C;MACA,IAAI,CAACF,IAAI,CAACK,IAAI,CAAC,uCAAuC,EAAE,EAAE,CAAC,CAC1DZ,SAAS,CACR,MAAK;QACH,IAAI,CAACN,cAAc,GAAG,KAAK;QAC3B,IAAI,CAACN,SAAS,GAAG,CAAC;MACpB,CAAC,EACAiB,KAAK,IAAI;QACR,IAAI,CAACnB,MAAM,CAACmB,KAAK,CAAC,uBAAuB,CAAC;QAC1CH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CACF;;EAEL;CAgCD;AAjIYrB,cAAc,GAAAgC,UAAA,EAN1BjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EAEWnC,cAAc,CAiI1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}